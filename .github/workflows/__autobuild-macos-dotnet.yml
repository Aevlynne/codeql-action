# Warning: This file is generated automatically, and should not be modified.
# Instead, please modify the template in the pr-checks directory and run:
#     pip install ruamel.yaml && python3 sync.py
# to regenerate this file.

name: 'PR Check - Autobuild C# on macOS'
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GO111MODULE: auto
on:
  push:
    branches:
    - main
    - releases/v1
    - releases/v2
  pull_request:
    types:
    - opened
    - synchronize
    - reopened
    - ready_for_review
  workflow_dispatch: {}
jobs:
  autobuild-macos-dotnet:
    strategy:
      matrix:
        include:
        - os: macos-latest
          version: latest
    name: 'Autobuild C# on macOS'
    timeout-minutes: 45
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Prepare test
      id: prepare-test
      uses: ./.github/prepare-test
      with:
        version: ${{ matrix.version }}
    - uses: ./../action/init
      with:
        languages: csharp
        tools: ${{ steps.prepare-test.outputs.tools-url }}
    - uses: ./../action/autobuild
      env:
        COR_ENABLE_PROFILING: ""
        COR_PROFILER: ""
        COR_PROFILER_PATH_64: ""
        CORECLR_ENABLE_PROFILING: ""
        CORECLR_PROFILER: ""
        CORECLR_PROFILER_PATH_64: ""
    - uses: ./../action/analyze
      env:
        TEST_MODE: true
    - name: Check database
      shell: bash
      run: |
        cd "$RUNNER_TEMP/codeql_databases"
        if [[ ! -d csharp ]]; then
          echo "Did not find a C# database"
          exit 1
        fi
    env:
      INTERNAL_CODEQL_ACTION_DEBUG_LOC: true

  runner-analyze-csharp-autobuild-macos:
    name: Runner macos autobuild C# analyze
    runs-on: macos-latest
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v3

      - name: Move codeql-action
        shell: bash
        run: |
          mkdir ../action
          mv * .github ../action/
          mv ../action/tests/multi-language-repo/{*,.github} .
          mv ../action/.github/workflows .github

      - name: Build runner
        run: |
          cd ../action/runner
          npm install
          npm run build-runner

      - name: Run init
        run: |
          ../action/runner/dist/codeql-runner-macos init --repository $GITHUB_REPOSITORY --languages csharp --github-url $GITHUB_SERVER_URL --github-auth ${{ github.token }}

      - name: Load environment variable
        shell: bash
        run: |
          echo "Initial environment"
          cat codeql-runner/codeql-env.json | jq
          DYLD="$(cat codeql-runner/codeql-env.json | jq -r '.DYLD_INSERT_LIBRARIES')"
          echo "$DYLD"
          echo "DYLD_INSERT_LIBRARIES=$DYLD" >> "$GITHUB_ENV"

          echo "Removing CLR tracer variables"
          cat codeql-runner/codeql-env.json | jq 'del(.COR_ENABLE_PROFILING, .COR_PROFILER, .COR_PROFILER_PATH_64, .CORECLR_ENABLE_PROFILING, .CORECLR_PROFILER, .CORECLR_PROFILER_PATH_64)' > codeql-env.temp.json
          mv codeql-env.temp.json codeql-runner/codeql-env.json

          echo "Final environment"
          cat codeql-runner/codeql-env.json | jq

      - name: Build code
        shell: bash
        run: |
          env
          # No CODEQL_RUNNER prefix.
          # No explicit sourcing of the tracing environment. We assume the autobuild command loads the tracing environment.
          ../action/runner/dist/codeql-runner-macos autobuild

      - name: Run analyze
        run: |
          ../action/runner/dist/codeql-runner-macos analyze --repository $GITHUB_REPOSITORY --commit $GITHUB_SHA --ref $GITHUB_REF --github-url $GITHUB_SERVER_URL --github-auth ${{ github.token }}
        env:
          TEST_MODE: true
